/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import DAO.DaoEntity;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.Query;
import javax.swing.table.DefaultTableModel;
import model.Client;

/**
 *
 * @author socrates
 */
public class ClientView extends javax.swing.JFrame {

    /**
     * Creates new form ClientView
     */
    
    public String numcli; //contient  l'idendentifiant du client
    public ClientView() {
        initComponents();
        remplirTableau();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jFrame3 = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nomClient = new javax.swing.JTextField();
        dateNaissance = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        prenomClient = new javax.swing.JTextField();
        tel = new javax.swing.JTextField();
        enregistrer = new javax.swing.JButton();
        supprimer = new javax.swing.JButton();
        modifier = new javax.swing.JButton();
        annuler = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        rafraichir = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame3Layout = new javax.swing.GroupLayout(jFrame3.getContentPane());
        jFrame3.getContentPane().setLayout(jFrame3Layout);
        jFrame3Layout.setHorizontalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame3Layout.setVerticalGroup(
            jFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nom du client");

        jLabel2.setText("Prenom du client");

        jLabel3.setText("Date de naissance");

        jLabel4.setText("Email");

        jLabel5.setText("Telephone");

        nomClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomClient(evt);
            }
        });

        dateNaissance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateNaissance(evt);
            }
        });

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                email(evt);
            }
        });

        prenomClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prenomClient(evt);
            }
        });

        tel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tel(evt);
            }
        });

        enregistrer.setText("Enregistrer");
        enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enregistrer(evt);
            }
        });

        supprimer.setText("Supprimer");
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimer(evt);
            }
        });

        modifier.setText("Modifier");
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifier(evt);
            }
        });

        annuler.setText("Annuler");
        annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annuler(evt);
            }
        });

        clientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nom", "prenom", "date de naissance", "Email", "telephone"
            }
        ));
        clientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientTableMouseClicked(evt);
            }
        });
        clientTable.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                clientTableInputMethodTextChanged(evt);
            }
        });
        jScrollPane1.setViewportView(clientTable);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        rafraichir.setText("rafraichir");
        rafraichir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rafraichirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(enregistrer)
                .addGap(27, 27, 27)
                .addComponent(modifier)
                .addGap(33, 33, 33)
                .addComponent(supprimer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
                .addComponent(annuler)
                .addGap(28, 28, 28)
                .addComponent(rafraichir)
                .addGap(236, 236, 236))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(email, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(dateNaissance, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prenomClient, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomClient, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tel))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nomClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(27, 27, 27)
                                .addComponent(prenomClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dateNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(supprimer)
                        .addContainerGap(23, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enregistrer)
                            .addComponent(modifier)
                            .addComponent(annuler)
                            .addComponent(rafraichir))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomClient(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomClient
        // TODO add your handling code here:
    }//GEN-LAST:event_nomClient

    private void dateNaissance(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateNaissance
        // TODO add your handling code here:
    }//GEN-LAST:event_dateNaissance

    private void enregistrer(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enregistrer

        DaoEntity dao = new DaoEntity();
        Client client = new Client();
        
        client.setNomClient(nomClient.getText());
        client.setPrenomClient(prenomClient.getText());
        String sDate1 = dateNaissance.getText();
        Date dateDeNaissance = null;
        try {
            dateDeNaissance = new SimpleDateFormat("dd/MM/YYYY").parse(sDate1);
        } catch (ParseException ex) {
            Logger.getLogger(ClientView.class.getName()).log(Level.SEVERE, null, ex);
        }
        client.setDateNaissance(dateDeNaissance);
        client.setEmail(email.getText());
        client.setTelephone(Integer.valueOf(tel.getText()));
        client.setSupp(false);
        dao.Enregistrer(client);
        viderChamps();
        remplirTableau();
    }//GEN-LAST:event_enregistrer

    
    private void annuler(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annuler
       System.out.println("Annuler");
       viderChamps();
    }//GEN-LAST:event_annuler

    private void modifier(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifier
        System.out.println("Modifier");
        DaoEntity dao = new DaoEntity();
        Client client = new Client();
        
        client.setNumclient(Integer.valueOf(numcli));
        client.setNomClient(nomClient.getText());
        client.setPrenomClient(prenomClient.getText());
        String sDate1 = dateNaissance.getText();
       
        Date dateDeNaissance = null;
        try {
            dateDeNaissance = new SimpleDateFormat("dd/MM/YYYY").parse(sDate1);
        } catch (ParseException ex) {
            Logger.getLogger(ClientView.class.getName()).log(Level.SEVERE, null, ex);
        }
        client.setDateNaissance(dateDeNaissance);
        client.setEmail(email.getText());
        client.setTelephone(Integer.valueOf(tel.getText()));
        client.setSupp(false);
        dao.modifier(client);
        viderChamps();
        remplirTableau();
       // clientTable.getModel().setValueAt("val", 3,0 );  
    }//GEN-LAST:event_modifier

    private void supprimer(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimer
        System.out.println("Suprimer");
        DaoEntity dao = new DaoEntity();
        Client client = new Client();
        
        client.setNumclient(Integer.valueOf(numcli));
        client.setNomClient(nomClient.getText());
        client.setPrenomClient(prenomClient.getText());
        String sDate1 = dateNaissance.getText();
       
        Date dateDeNaissance = null;
        try {
            dateDeNaissance = new SimpleDateFormat("dd/mm/YYYY").parse(sDate1);
        } catch (ParseException ex) {
            Logger.getLogger(ClientView.class.getName()).log(Level.SEVERE, null, ex);
        }
        client.setDateNaissance(dateDeNaissance);
        client.setEmail(email.getText());
        client.setTelephone(Integer.valueOf(tel.getText()));
        client.setSupp(true);
        dao.supprimer(client);
        viderChamps();
        remplirTableau();
        
    }//GEN-LAST:event_supprimer

    private void prenomClient(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prenomClient
        // TODO add your handling code here:
    }//GEN-LAST:event_prenomClient

    private void email(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_email
        // TODO add your handling code here:
    }//GEN-LAST:event_email

    private void tel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tel
        // TODO add your handling code here:
    }//GEN-LAST:event_tel

    private void clientTableInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_clientTableInputMethodTextChanged

    }//GEN-LAST:event_clientTableInputMethodTextChanged
    
    
    
    private void clientTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientTableMouseClicked
        // TODO add your handling code here:
        System.out.println("table clicked");
        System.out.println(clientTable.getSelectedRow());
        int ligne = clientTable.getSelectedRow();
        System.out.println(clientTable.getModel().getValueAt(ligne, 0));
        
        numcli = String.valueOf(clientTable.getModel().getValueAt(ligne, 0));
        //idclient.setText(String.valueOf(clientTable.getModel().getValueAt(ligne, 0)) );
        nomClient.setText((String) clientTable.getModel().getValueAt(ligne, 1));
        prenomClient.setText((String) clientTable.getModel().getValueAt(ligne, 2));
        DateFormat dateFormat = new SimpleDateFormat("dd/mm/yyyy");
        String datetostr = dateFormat.format(clientTable.getModel().getValueAt(ligne, 3));
        dateNaissance.setText(datetostr);
        email.setText((String) clientTable.getModel().getValueAt(ligne, 4));
        tel.setText(String.valueOf(clientTable.getModel().getValueAt(ligne, 5)) );
    }//GEN-LAST:event_clientTableMouseClicked

    private void rafraichirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rafraichirActionPerformed
        remplirTableau();
    }//GEN-LAST:event_rafraichirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton annuler;
    private javax.swing.JTable clientTable;
    private javax.swing.JTextField dateNaissance;
    private javax.swing.JTextField email;
    private javax.swing.JButton enregistrer;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JFrame jFrame3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modifier;
    private javax.swing.JTextField nomClient;
    private javax.swing.JTextField prenomClient;
    private javax.swing.JButton rafraichir;
    private javax.swing.JButton supprimer;
    private javax.swing.JTextField tel;
    // End of variables declaration//GEN-END:variables
    
    private void viderChamps() {
        
        nomClient.setText("");
        prenomClient.setText("");
        dateNaissance.setText("");
        email.setText("");
        tel.setText("");
        
    }
    
    private void remplirTableau(){
        DaoEntity dao = new DaoEntity();
        dao.getEmf();
        dao.getEm();  
        DefaultTableModel model = (DefaultTableModel) clientTable.getModel();
        model.setNumRows(0);
        
        
        String str = "SELECT c FROM Client c WHERE c.supp=false ORDER BY c.numclient ASC";
        Query query = dao.getEm().createQuery(str);        
        List <Client> clients =  query.getResultList();
        for (Client client:clients){
            Object numclient = client.getNumclient();
            Object nomclient = client.getNomClient();
            Object prenomclient = client.getPrenomClient();
            Object datenaissance = client.getDateNaissance();
            Object emailclient = client.getEmail();
            Object telephone = client.getTelephone();
            model.addRow(new  Object[]{numclient,nomclient,prenomclient,datenaissance,emailclient,telephone});
            
        }   
        dao.fermer();
    }
}
